@model IEnumerable<TrainingPortal.Models.Course>
@using TrainingPortal.Models;

@{
	ViewBag.Title = "Courses";
}

<h2>@ViewBag.Title</h2>

<div class="row">
	<div class="col-md-3 navigation">
		<ul class="nav nav-pills nav-stacked">
			<li class="active">
				<a href="#" onclick="onCategoryClicked(this);">All</a>
			</li>
			@foreach (var item in ViewBag.Categories)
			{
				<li class="">
					<a href="#" onclick="onCategoryClicked(this, @(item.Id));">@((string)item.Name)</a>
				</li>
			}
		</ul>

	</div>

	<div class="col-md-8">
		<div class="form-inline form-group">
			@{
				List<Audience> audienceList = new List<Audience>();
				audienceList.Add(new Audience { Id = null, Name = "Select audience" });
				audienceList.AddRange(ViewBag.AudienceList);
			}
			@Html.TextBox("courseName", null, new { @class = "form-control", @placeholder = "Enter course name" })
			@Html.DropDownList("audienceId", new SelectList(audienceList, "Id", "Name"), new { @class = "form-control" })
			<button class="btn btn-primary" onclick="onSearchClicked();">Search</button>
		</div>
		@if (User.Identity.IsAuthenticated && (User.IsInRole("admin") || User.IsInRole("editor")))
		{
			<p class="col-md-4">
				@Html.ActionLink("Create New", "Create")
			</p>
		}
		<div class="courses">
			@Html.Partial("Partials/Index", Model)
		</div>
	</div>
</div>

<script>
	var searchParams = {
		categoryId: undefined,
		audienceId: undefined,
		courseName: undefined
	}

	function loadCourses() {
		$.ajax({
			url: "Course/List",
			type: "GET",
			data: {
				categoryId: searchParams.categoryId,
				audienceId: searchParams.audienceId,
				courseName: searchParams.courseName
			},
			success: function (res) {
				$(".courses").html(res);
			}
		})
	}

	function onCategoryClicked(element, categoryId) {
		setActive(element);

		searchParams.categoryId = categoryId;

		loadCourses();
	}

	function onSearchClicked() {
		var audienceId = $("#audienceId").val();
		var courseName = $("#courseName").val();

		searchParams.audienceId = audienceId || undefined;
		searchParams.courseName = courseName || undefined;

		loadCourses();
	}

	function setActive(element) {
		$(".active").toggleClass("active");
		$(element).parent().toggleClass("active");
	}

</script>